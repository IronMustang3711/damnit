#This cmake script is intended to work on projects already generated by eclipse.

#XCode# 
#creating an xcode project works, but building from within the ide doesnt :-(
# mkdir xcode && cd xcode && cmake -G Xcode ..


cmake_minimum_required(VERSION 3.1)
set(ARM_PREFIX arm-frc-linux-gnueabi)
set(CMAKE_SYSTEM_NAME Linux)

set (CMAKE_CXX_STANDARD 14)

SET(CMAKE_CXX_COMPILER ${ARM_PREFIX}-g++)
SET(CMAKE_C_COMPILER ${ARM_PREFIX}-gcc)
#TODO: add -Wno-unknown-warning-option for xcode
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread -Wformat=2 -Wall -Wextra -Wno-unknown-pragmas -Wno-pedantic" CACHE STRING "" FORCE)

#doesnt seem to work on windows:
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fdiagnostics-color=always")
set(CMAKE_CXX_FLAGS_DEBUG "-O0 -Og -g3" CACHE STRING "" FORCE)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -g" CACHE STRING "" FORCE) # TODO: Look at this

set(LINKER_FLAGS "-pthread -rdynamic")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${LINKER_FLAGS}")

get_filename_component(PROJECT_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)
project(${PROJECT_NAME})

if(CMAKE_HOST_WIN32 AND NOT DEFINED ENV{HOME})
	#TODO make this work
    #set(ENV{HOME} "%HOMEDRIVE%%HOMEPATH%") 
	set(ENV{HOME} "C:/Users/jason")
endif()

set(WPI_DIR "$ENV{HOME}/wpilib")

include_directories(src)

include_directories(SYSTEM
        "${WPI_DIR}/cpp/current/include"
        "${WPI_DIR}/user/cpp/include")

  link_directories(
	    "${WPI_DIR}/common/current/lib/linux/athena/shared"
        "${WPI_DIR}/cpp/current/reflib/linux/athena/shared"
        "${WPI_DIR}/user/cpp/lib")




set(CMAKE_INSTALL_RPATH       
        "/opt/GenICam_v3_0_NI/bin/Linux32_ARM"
        "/usr/local/frc/lib")



file(GLOB_RECURSE SOURCE_FILES src/*.cpp)


add_executable(FRCUserProgram ${SOURCE_FILES} )
target_link_libraries(FRCUserProgram 
                #pathfinder 
                CTRE_Phoenix 
                CTRE_PhoenixCCI 
                navx_frc_cpp 
                wpi
        ${LINKER_FLAGS})

add_custom_target("deploy"
        COMMAND ant -f ${CMAKE_CURRENT_SOURCE_DIR}/build.xml
        DEPENDS FRCUserProgram)



file(GLOB_RECURSE ALL_SOURCE_FILES *.cpp *.h)

add_custom_target(
        clangformat
        COMMAND clang-format
        -style=file
        -i
        ${ALL_SOURCE_FILES})

